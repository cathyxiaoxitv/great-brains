{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length"],"mappings":"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","file":"main.fcae603c.js","sourceRoot":"../src","sourcesContent":["const $siteList = $('.siteList')//需要放前面，hashMap.forEach里无法访问到后面的变量\nconst $lastLi = $siteList.find('li.last')//这样子写是不是更加具体？\nconst x = localStorage.getItem('x')//把储存了hashMap的localStorage读取出来，是字符串，需要转成对象\nconst xObject = JSON.parse(x)\nconst hashMap = xObject ||[{ //第一次的时候是空的，需要我们初始化hashMap\n    logo:'D',url:'http://sivers.org'},\n    {logo:'N',url:'http://nav.al'},\n    {logo:'F',url:'http://fs.blog'},\n    {logo:'T', url:'http://tim.blog'},\n    {logo: 'S',url: 'http://seths.blog'}\n]\nconst simplifyUrl= (url)=>{\n    return url.replace('https://','')\n        .replace('http://','')\n        .replace('www','')\n}\nconst render = ()=>{\n    $siteList.find('li:not(.last)').remove()//找到除最后一项添加网址之外的所有，remove掉\n    hashMap.forEach((node,index)=>{//遍历此hashMap，生成网站\n        const $li = $(`<li>    \n                <div class=\"siteWrapper\">\n                    <span class=\"tips\">用键盘上的字母打开我</span>\n                    <div class=\"close\">\n                            <svg class=\"icon\" aria-hidden=\"true\">\n                                <use xlink:href=\"#icon-close\"></use>\n                            </svg>\n                     </div>\n                    <div class=\"site\">\n                        <div class =\"logo\">\n                            ${node.logo}\n                        </div>\n                       \n                    </div>\n                    <div class=\"description\">${simplifyUrl(node.url)}</div>\n                </div> \n</li>`).insertBefore($lastLi)\n        //.on()的功能是在选定的元素上绑定一个或多个事件处理函数。\n        $li.on('click',()=>{\n            window.open(node.url)\n        })//感知到click事件，执行函数【跳转url】\n        $li.on('click','.close',(e)=>{\n            // console.log('clicked') 测试看看\n            e.stopPropagation()//点击后代元素.close，执行\"阻止click事件向上冒泡\"\n            // console.log(hashMap);//显示当前hashMap，如果能知道当前点击的site是数组里的第几个就好删除了\n            hashMap.splice(index,1)\n            render()\n        })\n    })\n}\nrender();//一开始就render\n$('.addButton')\n    //indexOf返回string对象里出现制定值的索引\n    .on('click', () => {//首先把用户新输入的push进数组，再render一次\n        let url = window.prompt('请问你要添加的网址是？')\n        if (url.indexOf('http') !== 0) {//不是以'http'开头的话\n            url = 'http://' + url\n        }\n        hashMap.push({\n            logo:simplifyUrl(url)[0].toUpperCase(),//储存简化的url\n            url:url})\n        render()\n    });\nwindow.onbeforeunload = ()=>{\n    // console.log('页面要关闭了哟') preserve log方便查看\n    const string = JSON.stringify(hashMap)\n    localStorage.setItem('x',string)//把key的x和value的string存到localStorage里\n}\n$(document).on('keypress',(e)=>{\n   //const key = e.key;//变量名和属性名一样的时候可以简写如下\n   const {key} = e\n    for(let i = 0;i<hashMap.length;i++){\n        if(key.toUpperCase() === hashMap[i].logo){\n            window.open(hashMap[i].url)\n        }\n    }\n\n})\n"]}